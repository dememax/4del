// Maxim P. DEMENTYEV, 2025
// Video for Linux ver 2 emulation
// stat() system call for a v4l2 device

#include "emulate_common.hpp"

#include <sys/syscall.h>

#define CASE_SYSCALL(name) \
    case __NR_ ## name: \
        std::print("[EMU] Pass through syscall() for {} (#{})\n", #name, number); \
        break;

SYSTEM_CALL_OVERRIDE_BEGIN(syscall, long number, ...)

    // Check if the target application is opening our emulated device
    switch(number) {
    CASE_SYSCALL(read)
    CASE_SYSCALL(write)
    CASE_SYSCALL(open)
    CASE_SYSCALL(close)
    CASE_SYSCALL(stat)
    CASE_SYSCALL(fstat)
    CASE_SYSCALL(lstat)
    CASE_SYSCALL(poll)
    CASE_SYSCALL(lseek)
    CASE_SYSCALL(mmap)
    CASE_SYSCALL(mprotect)
    CASE_SYSCALL(munmap)
    CASE_SYSCALL(brk)
    CASE_SYSCALL(rt_sigaction)
    CASE_SYSCALL(rt_sigprocmask)
    CASE_SYSCALL(rt_sigreturn)
    CASE_SYSCALL(ioctl)
    CASE_SYSCALL(pread64)
    CASE_SYSCALL(pwrite64)
    CASE_SYSCALL(readv)
    CASE_SYSCALL(writev)
    CASE_SYSCALL(access)
    CASE_SYSCALL(pipe)
    CASE_SYSCALL(select)
    CASE_SYSCALL(sched_yield)
    CASE_SYSCALL(mremap)
    CASE_SYSCALL(msync)
    CASE_SYSCALL(mincore)
    CASE_SYSCALL(madvise)
    CASE_SYSCALL(shmget)
    CASE_SYSCALL(shmat)
    CASE_SYSCALL(shmctl)
    CASE_SYSCALL(dup)
    CASE_SYSCALL(dup2)
    CASE_SYSCALL(pause)
    CASE_SYSCALL(nanosleep)
    CASE_SYSCALL(getitimer)
    CASE_SYSCALL(alarm)
    CASE_SYSCALL(setitimer)
    CASE_SYSCALL(getpid)
    CASE_SYSCALL(sendfile)
    CASE_SYSCALL(socket)
    CASE_SYSCALL(connect)
    CASE_SYSCALL(accept)
    CASE_SYSCALL(sendto)
    CASE_SYSCALL(recvfrom)
    CASE_SYSCALL(sendmsg)
    CASE_SYSCALL(recvmsg)
    CASE_SYSCALL(shutdown)
    CASE_SYSCALL(bind)
    CASE_SYSCALL(listen)
    CASE_SYSCALL(getsockname)
    CASE_SYSCALL(getpeername)
    CASE_SYSCALL(socketpair)
    CASE_SYSCALL(setsockopt)
    CASE_SYSCALL(getsockopt)
    CASE_SYSCALL(clone)
    CASE_SYSCALL(fork)
    CASE_SYSCALL(vfork)
    CASE_SYSCALL(execve)
    CASE_SYSCALL(exit)
    CASE_SYSCALL(wait4)
    CASE_SYSCALL(kill)
    CASE_SYSCALL(uname)
    CASE_SYSCALL(semget)
    CASE_SYSCALL(semop)
    CASE_SYSCALL(semctl)
    CASE_SYSCALL(shmdt)
    CASE_SYSCALL(msgget)
    CASE_SYSCALL(msgsnd)
    CASE_SYSCALL(msgrcv)
    CASE_SYSCALL(msgctl)
    CASE_SYSCALL(fcntl)
    CASE_SYSCALL(flock)
    CASE_SYSCALL(fsync)
    CASE_SYSCALL(fdatasync)
    CASE_SYSCALL(truncate)
    CASE_SYSCALL(ftruncate)
    CASE_SYSCALL(getdents)
    CASE_SYSCALL(getcwd)
    CASE_SYSCALL(chdir)
    CASE_SYSCALL(fchdir)
    CASE_SYSCALL(rename)
    CASE_SYSCALL(mkdir)
    CASE_SYSCALL(rmdir)
    CASE_SYSCALL(creat)
    CASE_SYSCALL(link)
    CASE_SYSCALL(unlink)
    CASE_SYSCALL(symlink)
    CASE_SYSCALL(readlink)
    CASE_SYSCALL(chmod)
    CASE_SYSCALL(fchmod)
    CASE_SYSCALL(chown)
    CASE_SYSCALL(fchown)
    CASE_SYSCALL(lchown)
    CASE_SYSCALL(umask)
    CASE_SYSCALL(gettimeofday)
    CASE_SYSCALL(getrlimit)
    CASE_SYSCALL(getrusage)
    CASE_SYSCALL(sysinfo)
    CASE_SYSCALL(times)
    CASE_SYSCALL(ptrace)
    CASE_SYSCALL(getuid)
    CASE_SYSCALL(syslog)
    CASE_SYSCALL(getgid)
    CASE_SYSCALL(setuid)
    CASE_SYSCALL(setgid)
    CASE_SYSCALL(geteuid)
    CASE_SYSCALL(getegid)
    CASE_SYSCALL(setpgid)
    CASE_SYSCALL(getppid)
    CASE_SYSCALL(getpgrp)
    CASE_SYSCALL(setsid)
    CASE_SYSCALL(setreuid)
    CASE_SYSCALL(setregid)
    CASE_SYSCALL(getgroups)
    CASE_SYSCALL(setgroups)
    CASE_SYSCALL(setresuid)
    CASE_SYSCALL(getresuid)
    CASE_SYSCALL(setresgid)
    CASE_SYSCALL(getresgid)
    CASE_SYSCALL(getpgid)
    CASE_SYSCALL(setfsuid)
    CASE_SYSCALL(setfsgid)
    CASE_SYSCALL(getsid)
    CASE_SYSCALL(capget)
    CASE_SYSCALL(capset)
    CASE_SYSCALL(rt_sigpending)
    CASE_SYSCALL(rt_sigtimedwait)
    CASE_SYSCALL(rt_sigqueueinfo)
    CASE_SYSCALL(rt_sigsuspend)
    CASE_SYSCALL(sigaltstack)
    CASE_SYSCALL(utime)
    CASE_SYSCALL(mknod)
    CASE_SYSCALL(uselib)
    CASE_SYSCALL(personality)
    CASE_SYSCALL(ustat)
    CASE_SYSCALL(statfs)
    CASE_SYSCALL(fstatfs)
    CASE_SYSCALL(sysfs)
    CASE_SYSCALL(getpriority)
    CASE_SYSCALL(setpriority)
    CASE_SYSCALL(sched_setparam)
    CASE_SYSCALL(sched_getparam)
    CASE_SYSCALL(sched_setscheduler)
    CASE_SYSCALL(sched_getscheduler)
    CASE_SYSCALL(sched_get_priority_max)
    CASE_SYSCALL(sched_get_priority_min)
    CASE_SYSCALL(sched_rr_get_interval)
    CASE_SYSCALL(mlock)
    CASE_SYSCALL(munlock)
    CASE_SYSCALL(mlockall)
    CASE_SYSCALL(munlockall)
    CASE_SYSCALL(vhangup)
    CASE_SYSCALL(modify_ldt)
    CASE_SYSCALL(pivot_root)
    CASE_SYSCALL(_sysctl)
    CASE_SYSCALL(prctl)
    CASE_SYSCALL(arch_prctl)
    CASE_SYSCALL(adjtimex)
    CASE_SYSCALL(setrlimit)
    CASE_SYSCALL(chroot)
    CASE_SYSCALL(sync)
    CASE_SYSCALL(acct)
    CASE_SYSCALL(settimeofday)
    CASE_SYSCALL(mount)
    CASE_SYSCALL(umount2)
    CASE_SYSCALL(swapon)
    CASE_SYSCALL(swapoff)
    CASE_SYSCALL(reboot)
    CASE_SYSCALL(sethostname)
    CASE_SYSCALL(setdomainname)
    CASE_SYSCALL(iopl)
    CASE_SYSCALL(ioperm)
    CASE_SYSCALL(create_module)
    CASE_SYSCALL(init_module)
    CASE_SYSCALL(delete_module)
    CASE_SYSCALL(get_kernel_syms)
    CASE_SYSCALL(query_module)
    CASE_SYSCALL(quotactl)
    CASE_SYSCALL(nfsservctl)
    CASE_SYSCALL(getpmsg)
    CASE_SYSCALL(putpmsg)
    CASE_SYSCALL(afs_syscall)
    CASE_SYSCALL(tuxcall)
    CASE_SYSCALL(security)
    CASE_SYSCALL(gettid)
    CASE_SYSCALL(readahead)
    CASE_SYSCALL(setxattr)
    CASE_SYSCALL(lsetxattr)
    CASE_SYSCALL(fsetxattr)
    CASE_SYSCALL(getxattr)
    CASE_SYSCALL(lgetxattr)
    CASE_SYSCALL(fgetxattr)
    CASE_SYSCALL(listxattr)
    CASE_SYSCALL(llistxattr)
    CASE_SYSCALL(flistxattr)
    CASE_SYSCALL(removexattr)
    CASE_SYSCALL(lremovexattr)
    CASE_SYSCALL(fremovexattr)
    CASE_SYSCALL(tkill)
    CASE_SYSCALL(time)
    CASE_SYSCALL(futex)
    CASE_SYSCALL(sched_setaffinity)
    CASE_SYSCALL(sched_getaffinity)
    CASE_SYSCALL(set_thread_area)
    CASE_SYSCALL(io_setup)
    CASE_SYSCALL(io_destroy)
    CASE_SYSCALL(io_getevents)
    CASE_SYSCALL(io_submit)
    CASE_SYSCALL(io_cancel)
    CASE_SYSCALL(get_thread_area)
    CASE_SYSCALL(lookup_dcookie)
    CASE_SYSCALL(epoll_create)
    CASE_SYSCALL(epoll_ctl_old)
    CASE_SYSCALL(epoll_wait_old)
    CASE_SYSCALL(remap_file_pages)
    CASE_SYSCALL(getdents64)
    CASE_SYSCALL(set_tid_address)
    CASE_SYSCALL(restart_syscall)
    CASE_SYSCALL(semtimedop)
    CASE_SYSCALL(fadvise64)
    CASE_SYSCALL(timer_create)
    CASE_SYSCALL(timer_settime)
    CASE_SYSCALL(timer_gettime)
    CASE_SYSCALL(timer_getoverrun)
    CASE_SYSCALL(timer_delete)
    CASE_SYSCALL(clock_settime)
    CASE_SYSCALL(clock_gettime)
    CASE_SYSCALL(clock_getres)
    CASE_SYSCALL(clock_nanosleep)
    CASE_SYSCALL(exit_group)
    CASE_SYSCALL(epoll_wait)
    CASE_SYSCALL(epoll_ctl)
    CASE_SYSCALL(tgkill)
    CASE_SYSCALL(utimes)
    CASE_SYSCALL(vserver)
    CASE_SYSCALL(mbind)
    CASE_SYSCALL(set_mempolicy)
    CASE_SYSCALL(get_mempolicy)
    CASE_SYSCALL(mq_open)
    CASE_SYSCALL(mq_unlink)
    CASE_SYSCALL(mq_timedsend)
    CASE_SYSCALL(mq_timedreceive)
    CASE_SYSCALL(mq_notify)
    CASE_SYSCALL(mq_getsetattr)
    CASE_SYSCALL(kexec_load)
    CASE_SYSCALL(waitid)
    CASE_SYSCALL(add_key)
    CASE_SYSCALL(request_key)
    CASE_SYSCALL(keyctl)
    CASE_SYSCALL(ioprio_set)
    CASE_SYSCALL(ioprio_get)
    CASE_SYSCALL(inotify_init)
    CASE_SYSCALL(inotify_add_watch)
    CASE_SYSCALL(inotify_rm_watch)
    CASE_SYSCALL(migrate_pages)
    CASE_SYSCALL(openat)
    CASE_SYSCALL(mkdirat)
    CASE_SYSCALL(mknodat)
    CASE_SYSCALL(fchownat)
    CASE_SYSCALL(futimesat)
    CASE_SYSCALL(newfstatat)
    CASE_SYSCALL(unlinkat)
    CASE_SYSCALL(renameat)
    CASE_SYSCALL(linkat)
    CASE_SYSCALL(symlinkat)
    CASE_SYSCALL(readlinkat)
    CASE_SYSCALL(fchmodat)
    CASE_SYSCALL(faccessat)
    CASE_SYSCALL(pselect6)
    CASE_SYSCALL(ppoll)
    CASE_SYSCALL(unshare)
    CASE_SYSCALL(set_robust_list)
    CASE_SYSCALL(get_robust_list)
    CASE_SYSCALL(splice)
    CASE_SYSCALL(tee)
    CASE_SYSCALL(sync_file_range)
    CASE_SYSCALL(vmsplice)
    CASE_SYSCALL(move_pages)
    CASE_SYSCALL(utimensat)
    CASE_SYSCALL(epoll_pwait)
    CASE_SYSCALL(signalfd)
    CASE_SYSCALL(timerfd_create)
    CASE_SYSCALL(eventfd)
    CASE_SYSCALL(fallocate)
    CASE_SYSCALL(timerfd_settime)
    CASE_SYSCALL(timerfd_gettime)
    CASE_SYSCALL(accept4)
    CASE_SYSCALL(signalfd4)
    CASE_SYSCALL(eventfd2)
    CASE_SYSCALL(epoll_create1)
    CASE_SYSCALL(dup3)
    CASE_SYSCALL(pipe2)
    CASE_SYSCALL(inotify_init1)
    CASE_SYSCALL(preadv)
    CASE_SYSCALL(pwritev)
    CASE_SYSCALL(rt_tgsigqueueinfo)
    CASE_SYSCALL(perf_event_open)
    CASE_SYSCALL(recvmmsg)
    CASE_SYSCALL(fanotify_init)
    CASE_SYSCALL(fanotify_mark)
    CASE_SYSCALL(prlimit64)
    CASE_SYSCALL(name_to_handle_at)
    CASE_SYSCALL(open_by_handle_at)
    CASE_SYSCALL(clock_adjtime)
    CASE_SYSCALL(syncfs)
    CASE_SYSCALL(sendmmsg)
    CASE_SYSCALL(setns)
    CASE_SYSCALL(getcpu)
    CASE_SYSCALL(process_vm_readv)
    CASE_SYSCALL(process_vm_writev)
    CASE_SYSCALL(kcmp)
    CASE_SYSCALL(finit_module)
    CASE_SYSCALL(sched_setattr)
    CASE_SYSCALL(sched_getattr)
    CASE_SYSCALL(renameat2)
    CASE_SYSCALL(seccomp)
    CASE_SYSCALL(getrandom)
    CASE_SYSCALL(memfd_create)
    CASE_SYSCALL(kexec_file_load)
    CASE_SYSCALL(bpf)
    CASE_SYSCALL(execveat)
    CASE_SYSCALL(userfaultfd)
    CASE_SYSCALL(membarrier)
    CASE_SYSCALL(mlock2)
    CASE_SYSCALL(copy_file_range)
    CASE_SYSCALL(preadv2)
    CASE_SYSCALL(pwritev2)
    CASE_SYSCALL(pkey_mprotect)
    CASE_SYSCALL(pkey_alloc)
    CASE_SYSCALL(pkey_free)
    CASE_SYSCALL(statx)
    CASE_SYSCALL(io_pgetevents)
    CASE_SYSCALL(rseq)
    CASE_SYSCALL(uretprobe)
    CASE_SYSCALL(pidfd_send_signal)
    CASE_SYSCALL(io_uring_setup)
    CASE_SYSCALL(io_uring_enter)
    CASE_SYSCALL(io_uring_register)
    CASE_SYSCALL(open_tree)
    CASE_SYSCALL(move_mount)
    CASE_SYSCALL(fsopen)
    CASE_SYSCALL(fsconfig)
    CASE_SYSCALL(fsmount)
    CASE_SYSCALL(fspick)
    CASE_SYSCALL(pidfd_open)
    CASE_SYSCALL(clone3)
    CASE_SYSCALL(close_range)
    CASE_SYSCALL(openat2)
    CASE_SYSCALL(pidfd_getfd)
    CASE_SYSCALL(faccessat2)
    CASE_SYSCALL(process_madvise)
    CASE_SYSCALL(epoll_pwait2)
    CASE_SYSCALL(mount_setattr)
    CASE_SYSCALL(quotactl_fd)
    CASE_SYSCALL(landlock_create_ruleset)
    CASE_SYSCALL(landlock_add_rule)
    CASE_SYSCALL(landlock_restrict_self)
    CASE_SYSCALL(memfd_secret)
    CASE_SYSCALL(process_mrelease)
    CASE_SYSCALL(futex_waitv)
    CASE_SYSCALL(set_mempolicy_home_node)
    CASE_SYSCALL(cachestat)
    CASE_SYSCALL(fchmodat2)
    CASE_SYSCALL(map_shadow_stack)
    CASE_SYSCALL(futex_wake)
    CASE_SYSCALL(futex_wait)
    CASE_SYSCALL(futex_requeue)
    CASE_SYSCALL(statmount)
    CASE_SYSCALL(listmount)
    CASE_SYSCALL(lsm_get_self_attr)
    CASE_SYSCALL(lsm_set_self_attr)
    CASE_SYSCALL(lsm_list_modules)
    CASE_SYSCALL(mseal)
    CASE_SYSCALL(setxattrat)
    CASE_SYSCALL(getxattrat)
    CASE_SYSCALL(listxattrat)
    CASE_SYSCALL(removexattrat)


    default:
        std::print("[EMU] Pass through some syscall() with number '{}'\n", number);
        break;
    }

    // --- IMPORTANT ---
    // For all other syscalls, we must pass them through.
    // We have to unpack all possible arguments and forward them.
    // x86-64 syscalls can have up to 6 arguments.
    va_list args;
    va_start(args, number);
    long arg1 = va_arg(args, long);
    long arg2 = va_arg(args, long);
    long arg3 = va_arg(args, long);
    long arg4 = va_arg(args, long);
    long arg5 = va_arg(args, long);
    long arg6 = va_arg(args, long);
    va_end(args);

SYSTEM_CALL_OVERRIDE_END(number, arg1, arg2, arg3, arg4, arg5, arg6)
